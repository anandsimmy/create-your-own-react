{"ast":null,"code":"var _jsxFileName = \"/Users/anandsimmy/web-dev/react-projects/create-your-own-react/src/index.js\";\n\nfunction createElement(type, props, ...children) {\n  return {\n    type,\n    props: { ...props,\n      children: children.map(child => {\n        if (typeof child === 'object') {\n          return child;\n        } else {\n          return createPrimitiveElement(child);\n        }\n      })\n    }\n  };\n}\n\nconst createPrimitiveElement = child => {\n  return {\n    type: 'PRIMITIVE_ELEMENT',\n    props: {\n      nodeValue: child,\n      children: []\n    }\n  };\n};\n\nconst render = (element, container) => {\n  const dom = element.type === 'PRIMITIVE_ELEMENT' ? document.createTextNode('') : document.createElement(element.type); // attaching props to dom node\n\n  Object.keys(element.props).filter(prop => prop !== 'children').forEach(prop => {\n    console.log('prop', prop, element.props[prop]);\n    dom[prop] = element.props[prop];\n  }); // attaching children to dom node by recursive call\n\n  element.props.children.forEach(child => {\n    render(child, dom);\n  });\n  container.appendChild(dom);\n};\n\nconst MyReact = {\n  createElement,\n  render\n};\n/** @jsx MyReact.createElement */\n\nconst element = MyReact.createElement(\"div\", {\n  id: \"my-react\",\n  class: \"hello\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n}, MyReact.createElement(\"h1\", {\n  style: \"color:blue\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }\n}, \"Creating My Own React\"));\nconst rootContainer = document.getElementById('root');\nMyReact.render(element, rootContainer);","map":{"version":3,"sources":["/Users/anandsimmy/web-dev/react-projects/create-your-own-react/src/index.js"],"names":["createElement","type","props","children","map","child","createPrimitiveElement","nodeValue","render","element","container","dom","document","createTextNode","Object","keys","filter","prop","forEach","console","log","appendChild","MyReact","rootContainer","getElementById"],"mappings":";;AAAA,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC,GAAGC,QAAvC,EAAiD;AAC7C,SAAO;AACHF,IAAAA,IADG;AAEHC,IAAAA,KAAK,EAAE,EACH,GAAGA,KADA;AAEHC,MAAAA,QAAQ,EAAEA,QAAQ,CAACC,GAAT,CAAaC,KAAK,IAAI;AAC5B,YAAG,OAAOA,KAAP,KAAiB,QAApB,EAA6B;AACzB,iBAAOA,KAAP;AACH,SAFD,MAEK;AACD,iBAAOC,sBAAsB,CAACD,KAAD,CAA7B;AACH;AACJ,OANS;AAFP;AAFJ,GAAP;AAaH;;AAED,MAAMC,sBAAsB,GAAGD,KAAD,IAAW;AACrC,SAAO;AACHJ,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,KAAK,EAAE;AACHK,MAAAA,SAAS,EAAEF,KADR;AAEHF,MAAAA,QAAQ,EAAE;AAFP;AAFJ,GAAP;AAOH,CARD;;AAWA,MAAMK,MAAM,GAAE,CAACC,OAAD,EAAUC,SAAV,KAAwB;AAClC,QAAMC,GAAG,GAAEF,OAAO,CAACR,IAAR,KAAiB,mBAAjB,GAAuCW,QAAQ,CAACC,cAAT,CAAwB,EAAxB,CAAvC,GAAqED,QAAQ,CAACZ,aAAT,CAAuBS,OAAO,CAACR,IAA/B,CAAhF,CADkC,CAGlC;;AACAa,EAAAA,MAAM,CACDC,IADL,CACUN,OAAO,CAACP,KADlB,EAEKc,MAFL,CAEYC,IAAI,IAAIA,IAAI,KAAK,UAF7B,EAGKC,OAHL,CAGcD,IAAD,IAAU;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EAA0BR,OAAO,CAACP,KAAR,CAAce,IAAd,CAA1B;AACAN,IAAAA,GAAG,CAACM,IAAD,CAAH,GAAWR,OAAO,CAACP,KAAR,CAAce,IAAd,CAAX;AACH,GANL,EAJkC,CAYlC;;AACAR,EAAAA,OAAO,CAACP,KAAR,CAAcC,QAAd,CAAuBe,OAAvB,CAA+Bb,KAAK,IAAI;AACpCG,IAAAA,MAAM,CAACH,KAAD,EAAQM,GAAR,CAAN;AACH,GAFD;AAIAD,EAAAA,SAAS,CAACW,WAAV,CAAsBV,GAAtB;AACH,CAlBD;;AAoBA,MAAMW,OAAO,GAAE;AACXtB,EAAAA,aADW;AAEXQ,EAAAA;AAFW,CAAf;AAKA;;AACA,MAAMC,OAAO,GACT;AAAK,EAAA,EAAE,EAAC,UAAR;AAAmB,EAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAMA,MAAMc,aAAa,GAAEX,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAArB;AACAF,OAAO,CAACd,MAAR,CAAeC,OAAf,EAAwBc,aAAxB","sourcesContent":["function createElement(type, props, ...children) {\n    return {\n        type,\n        props: {\n            ...props,\n            children: children.map(child => {\n                if(typeof child === 'object'){\n                    return child\n                }else{\n                    return createPrimitiveElement(child)\n                }\n            }) \n        }\n    }\n}\n\nconst createPrimitiveElement= (child) => {\n    return {\n        type: 'PRIMITIVE_ELEMENT',\n        props: {\n            nodeValue: child,\n            children: []\n        }\n    }\n}\n\n\nconst render= (element, container) => {\n    const dom= element.type === 'PRIMITIVE_ELEMENT' ? document.createTextNode('') : document.createElement(element.type)\n\n    // attaching props to dom node\n    Object\n        .keys(element.props)\n        .filter(prop => prop !== 'children')\n        .forEach((prop) => {\n            console.log('prop', prop, element.props[prop]);\n            dom[prop]= element.props[prop]\n        })\n\n    // attaching children to dom node by recursive call\n    element.props.children.forEach(child => {\n        render(child, dom)\n    })\n\n    container.appendChild(dom)\n}\n\nconst MyReact= {\n    createElement,\n    render\n}\n\n/** @jsx MyReact.createElement */\nconst element= (\n    <div id='my-react' class='hello'>\n        <h1 style=\"color:blue\">Creating My Own React</h1>\n    </div>\n)\n\nconst rootContainer= document.getElementById('root')\nMyReact.render(element, rootContainer)"]},"metadata":{},"sourceType":"module"}